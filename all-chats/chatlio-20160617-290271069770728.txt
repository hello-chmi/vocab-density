person: Hi Wade (And presumably Josh and Ian)!
wade: Hi Matt! Thanks for being willing to chat today over our new system. It'll just be me today. How are you doing?
person: I'm doing good. How are you? And does roughly an hour sound about right for how long to expect us to talk?
wade: Doing fine, thanks :unamused:lightly_smiling_face: And yes we should wrap up within an hour. Want to start by telling me about what you've been up to lately?
person: Sure. My full-time work is pretty far at a technical level from what it sounds like you're looking for now right now. I primarily work on web apps that drive customer-facing tools and our platform API in a mixture of Ruby and JavaScript.
wade: I hear you have some experience with Clojure and/or Clojurescript as well?
person: Yes. I worked at a consultancy called Bendyworks in Madison for a number of years, and we subcontracted through Cognitect. I worked for some of their clients during that time, using Clojure. And I've dabbled with Clojure, ClojureScript and Datomic quite a bit in my free time.
person: At a more meta level, I care a lot about building simple, understandable systems, and I've really taken to functional programming with immutable data structures.
person: Although types are good, sometimes, too!
wade: That's great to hear :unamused:lightly_smiling_face: As Drew may have mentioned, we are mostly a Clojure shop (though we use a decent amount of Go) and Datomic is our primary database system. We haven't yet dabbled in Clojurescript but Om/Om.next look very alluring. So your interest in Clojure is quite relevant :unamused:lightly_smiling_face:

Why are you thinking of moving on from Bendyworks?
person: I was done at Bendyworks back in 2014. At the time, I wanted to focus more on my family, as I had a parent that had just been diagnosed with cancer. I found out that Heroku had a large percentage of remote employees in engineering, and started there in November 2014.
person: So that's where I am today.
person: As mentioned, we primarily are writing Ruby and JavaScript, and our responsibilities lie in some legacy systems co-maintained with other teams, as well as our own components. There's not a lot of room for rethinking things to be simpler. I don't mean to critique the current situation too harshly, as it is pretty good and my team mates are excellent.
wade: I'm sorry to hear about your parent, and understand your decision. Family always comes first. So with regards to Heroku, sounds like it's a great place you're just looking for new challenges?
person: That, and a few other things. The company has mostly standardized on Ruby, which is fine and I've got a great skillset on top of. I often feel like I'd like to advance a bit beyond that, and do something besides writing Ruby, JavaScript and using Postgres. We actually use Heroku to use Heroku, so if you're familiar with the tooling, my experience consulting and deploying apps to Heroku has paid off well in working for Heroku.
person: And because, although it is a valid thing to value, I've never felt like building great tools for other developers is really my passion. It certainly is for other people on my team, and more power to them.
person: The original tweet that Drew reached out in response to had a line item about making the world a better place. And while I can say increasing developer happiness might make a few people's lives better, I've been looking for a company that's really making positive changes in people's lives.
wade: That's great to hear :unamused:lightly_smiling_face:. Making people's lives better is one of my primary goals when I co-founded the company with Drew. Did Drew give you a rundown of our vision? I can go into more details as well.
person: I'd love to hear about it. I think I only got the Cliff notes from Drew :smile:
wade: Cool beans. Well, as you may know, recruiting and hiring currently suck a lot experience/learning-wise for both candidates and companies. You may invest a lot of time interviewing with a company, without any insight or guidance into what company wants beyond a job posting, etc. and then often if things don't go well, you're back to square one. The company sometimes doesn't even send you a useful reason why (or any reason at all). On the company side, folks often spend a ton of time and money trying to find and recruit the best talent. Oftentimes companies, particularly startups, don't have a super clear picture of who they want and why and the learnings they get after each interview aren't organized properly or lost. Adding to that mix: the 80-90% of recruiters who make the top 10% look bad and create stress/annoyance for all involved...
wade: So our goal at Wade &amp; Wendy is to turn the system on its head and capture all these learnings to improve everyone's lives. We are planning to do that through two conversational AIs: Wade and Wendy. Wade's job will to be your "super" recruiter and spend the time to get to know you, your professional goals, beliefs, and feelings and over time to help find you the best opportunities for professional advancement (whether it's a new job or otherwise). Unlike most normal recruiters, Wade will actually get to know you and eventually anticipate your needs. Because of the machine learning, etc. aspects, he'll also be able to check industry patterns and do things a fully human recruiter couldn't...
wade: Wendy's goal is to live inside a company (right now, that means in their Slack) and do something similar: learn who the company really is and what they're really looking for behind the bits and pieces of information they post publicly. What do they mean by "data scientist" or "full-stack engineer"? What are the personalities like? She'll also collect and moderate feedback sessions with company to learn right along with them about what they really need and will need. Like Wade, she'll have access to a larger intelligence net to get a pulse on industry patterns. Over time she will also be able to anticipate company needs and eventually take on more HR-related tasks, perhaps even running screenings on behalf of the company...
wade: Over the long-term, I can even see Wade starting even earlier while folks are still in school to help them make choices about career paths, etc.  The idea is that folks will always have someone looking out for them, seeing about next steps. No knowledge or wisdom gets lost. Something I wish I had years ago :unamused:lightly_smiling_face:
wade: Still sound interesting?
person: That does sound interesting. I think the two bots with two purposes is also a nice solution.
wade: Yes we think it solves the issue about split priorities. You know Wade is working for you. Companies know Wendy is working for them.
person: I'm a bit curious about how you're planning to get the training data to really understand lots of different interactions around the job search, and, if you're starting with a human trainer period, how you plan to get past that (as that's what I've read has tripped up a lot of conversational bots), but we don't have to get into that deeply right now :wink:
wade: The thing that often trips up other chat entities/bots is that they try to target to wide of a domain and don't manage the flow of a conversation well enough. By restricting the domain and focus of conversation it can help tremendously improve the quality. We also have an internal annotation system that can extract information from conversations and organize it in a way that provides context for future conversations/recommendations, etc. Wade is able to have fully automated conversations now, but we also use human conversations to train/do A/B testing and capture more variance. Can definitely jump into this more at a future time :unamused:lightly_smiling_face:

In the meantime, could you tell me more about projects you've been most proud of building/working on at Heroku or your other previous roles?
person: Sure. None of them are going to really show applications of machine learning, as a caveat. I think I told Drew that, as well. (But I'm very excited to be able to apply that interest to work!)
person: I was lead on the Elements marketplace (<https:confused:/elements.heroku.com>), which conceptually is a very simple site -- it abstracts away a number of old sites we had, uses them as an API, and renders that content. But redoing that site represented making sure we had the concerns of the VP of Product, the VP of Marketing, and my own engineering and product managers in mind. As a result, our team works quite closely with our "Web Marketing" team, we have a working relationship with our marketing department that was nonexistent before, and I think we used these as jumping off points to form much better working relationships with other engineering teams in the company -- a big improvement over the isolated team I first joined at Heroku.
person: When I was consulting, we worked on a project that was a rather large search infrastructure written in Clojure, and using threadpools and atoms to manage reaching out to about 27 different backends for search, then collating the results into a search results page for a customer in a web browser.
person: And lots of other projects that I'm probably forgetting, but I'm happy to talk about any particular types of projects you might be interested in. When I was consulting, we generally worked on a new project with a new client every 3-6 months, so there's quite a few of them.
wade: Interesting to hear. One of our engineers, Marc (who is also a Clojure whiz) also spent a lot of time consulting before he came on board. Being able to work on a lot of different projects and many stakeholders is great prep for a startup environment I think.

Would love to hear more about the search infrastructure project and your specific contributions to it if you don't mind sharing.
person: Ok. In that case, the client already had an existing interface (I am not sure that it was implemented as anything more than shared a function definition, no Protocols, etc.) for what a search back-end should do. But they had a lot of these partners to search across. Let's call them rates and availability backends, because you'd search for something across a date range and were looking for whether something was available then or not. The biggest challenge there was writing the parsers that received their responses -- some XML, some full SOAP, some bit-packed or CSV type data that needed a custom parser, and translated it all into the same format. The initial translations were dependent on how complex the original data was. In some cases, you'd get a list on products in one response and a list of availability ranges for those product codes in another response.
person: Since the results were "winner comes first" we had to spend some time improving our processing of these responses, because some integrations always "lost" -- they never got back in time before the timeout, so they never appeared on a search results page.
person: In Clojure, there's lots of ways to process lists, and it turns out that nested loops with 'for' and a great big block works out great in benchmarking compared to individual list processing with map/reduce and combining with something like zipmap or other methods. At least in this case, it might not always prove true :wink:
wade: :unamused:lightly_smiling_face: Sounds very intriguing and analogous to some of the challenges we have too. Since we're analyzing and talking to data sources from many different places (ATS systems, Slack, third-party APIs) there's a decent amount of orchestration going on.
person: I think this was also before we had anything like Schema in play. And clojure.spec has only really come out just now, this was a few years ago. So we wrote a lot of tests to ensure things got translated correctly with the often-messy responses we got. We ended up writing something like VCR that saved some sample responses from backends so we could run integration tests across the same data later.
wade: Yes we're pretty excited about clojure.spec
person: Yeah, it becomes a problem of sitting back and thinking about the data you have, and the steps you need to get it into the data you awnt.
wade: Always a worthwhile exercise. Saves a lot of headache later.
person: I think the side project that you might be most interested in might be my attempt to rewrite the book Agile Data Science in Clojure + Datomic: I got as far as explaining aggregates in Datomic before the blog posts started taking too much time to write.
wade: Can you link me to that? Would love to share with the rest of the team.
person: <http:confused:/blog.mattgauger.com/blog/categories/clojure-data-science/>
person: I wish there were more, but it has been quite awhile since I have looked at it, and I quickly learned how much work writing a technical book (even one meant for a blog) takes, especially when I wildly diverged from the original.
wade: Awesome thank you. And yes I feel your pain as someone who also tried maintaining a blog... Wrote a cryptocurrency-related piece a long time ago. Planned to write more but haven't since... :disappointed:

Anyways, looks like we're getting close to the end of the chat, so please let me know if you have any more questions about me, Wade &amp; Wendy, etc. Happy to answer.
person: I have quite a few, but I think I'll save some of them for talking more broadly with the team. In a nutshell, can you tell me a bit about the current team, your process, and how your product roadmap informs your day-to-day engineering work?
wade: Sure. Will try to give you the quick rundown. You've chatted briefly with Drew, our CEO, who is a serial entrepreneur. I am the CTO and have a background in systems science/complex systems engineering (think biologically-inspired algorithms, swarm behavior, etc.). Formerly was founding technologist at National Museum of Mathematics and core developer on Storj (storj.io) distributed storage project. Ian oversees business development/customer success and was formerly Chief of Staff at American Express. Adrian oversees product design and also has a lot of startup experience. We have two engineers, Marc and Rob who focus in Clojure/Go respectively but are familiar with many languages. Marc has 15+ experience in senior engineering roles and works a lot on our database/data engineering pipeline. Rob previously worked at OnDeck and has handled much of the message-passing middleware for our conversational systems. Our junior data scientist is Lucy, who has a statistics background from Columbia. We've recently expanded our conversational intelligence team with Ariana and Chi, who have practical/theoretical experience in computational linguistics/annotation and have worked at Ask Jeeves, Google, etc. on related projects. They bring a wealth of knowledge in conversation architecture and thinking about annotation. We have an intern, Scott, with a CS background and also a full-time AI trainer, Tommy, who has a background in organizational psychology...
wade: We've raised about 4 million dollars to date in seed funding from folks including FF ventures, Slack, and more...

As for product, we follow an agile process as with most startups. We have a 1-week, 6-week (near-term), 3-month (medium term) and 1-year (long-term) roadmap with varying level of detail. This guides our 2-week sprints for immediate work and deliverables. We use trello for PM at the moment and live/breathe Slack for communication...
wade: We work very collaboratively in-person/via Slack so engineering/data/conversation folks are always on the same page. We have a comprehensive set of policies guiding testing, repository organization and validation (e.g. never commit to master, PR reviews w/ two eyes, etc.)
wade: We focus on completing core, MVP projects to review with customers, get feedback and then learn/adjust. The product roadmap I mentioned earlier (specifically the week and 6-week lists) help inform our next sprints and focuses, but we adapt/update as we learn from our customers.
wade: Phew...holy wall of text batman...
person: Yeah, sorry for asking for the laundry list of how everything works. I think that gives me a good picture of how things work, and it's good to see so many agile processes and just-plain-good-ideas in play.
person: Thank for you for your time. I know you're probably really busy :smile:
wade: No problemo and thanks for the questions. The goal was also to help you learn more about us too :unamused:lightly_smiling_face:
wade: And thanks for your time as well. We'll follow up with next steps. Have a good day!
person: Thanks! You too.
wade: [end]
wade: /chatlio operator-name
person: _Name forwarding *OFF*. Your Chatlio widget will show "Wade" to visitors_
